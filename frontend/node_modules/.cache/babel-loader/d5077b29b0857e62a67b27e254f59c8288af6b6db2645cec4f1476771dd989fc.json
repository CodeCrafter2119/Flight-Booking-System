{"ast":null,"code":"var _jsxFileName = \"C:\\\\SPRING-BOOT\\\\FlightFrontend\\\\booked-frontend\\\\src\\\\components\\\\SeatSelectionPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport { BookedFlightAPI, retrieveAFlightById } from '../api/CallingApi';\nimport './SeatSelection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeatSelectionPage = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    flightId\n  } = useParams();\n  const authContext = useAuth();\n  const [bookingDetails, setBookingDetails] = useState(null);\n  const [passengerCount, setPassengerCount] = useState(1);\n  const [selectedSeats, setSelectedSeats] = useState([]);\n  const [unavailableSeats, setUnavailableSeats] = useState(new Set());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [creatingBooking, setCreatingBooking] = useState(false);\n  const stompClient = useRef(null);\n  const seatPrice = 500;\n  const userId = authContext.userId || localStorage.getItem('userId');\n\n  // Seat configuration\n  const rows = 10;\n  const seatsPerRow = 6;\n  useEffect(() => {\n    var _location$state;\n    // Check if we have booking details from location state\n    if (location.state) {\n      setBookingDetails(location.state.bookingDetails);\n      setPassengerCount(location.state.passengerCount || 1);\n    } else if (flightId) {\n      // If no booking details, we need to create a booking first\n      createBookingFromFlightId(flightId);\n    } else {\n      navigate('/flights');\n      return;\n    }\n\n    // Initialize WebSocket connection only if we have booking details\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.bookingDetails) {\n      initializeWebSocket();\n    }\n    return () => {\n      if (stompClient.current) {\n        stompClient.current.deactivate();\n      }\n    };\n  }, [flightId, location.state]);\n  const createBookingFromFlightId = async flightId => {\n    try {\n      var _bookingResponse$data;\n      setCreatingBooking(true);\n      setError('');\n\n      // First, get flight details\n      const flightResponse = await retrieveAFlightById(flightId);\n      const flight = flightResponse.data;\n      if (!flight) {\n        throw new Error('Flight not found');\n      }\n\n      // Create a basic booking\n      const bookingData = {\n        flightId: flightId,\n        userId: userId,\n        passengers: 1,\n        // Default to 1 passenger\n        totalAmount: flight.price || 0\n      };\n      const bookingResponse = await BookedFlightAPI(bookingData);\n      if (!(bookingResponse !== null && bookingResponse !== void 0 && (_bookingResponse$data = bookingResponse.data) !== null && _bookingResponse$data !== void 0 && _bookingResponse$data.id)) {\n        throw new Error(\"Failed to create booking\");\n      }\n\n      // Generate booking reference if not provided\n      const bookingReference = bookingResponse.data.bookingReference || `REF-${Math.random().toString(36).substr(2, 9).toUpperCase()}`;\n      setBookingDetails({\n        id: bookingResponse.data.id,\n        flightId: flightId,\n        flightNumber: flight.flightNumber || `FL${flightId}`,\n        departureFrom: flight.departureFrom,\n        arrivalTo: flight.arrivalTo,\n        departureDate: flight.departureDate,\n        departureTime: flight.departureTime,\n        totalAmount: flight.price || 0,\n        bookingReference: bookingReference,\n        ...bookingResponse.data\n      });\n\n      // Now initialize WebSocket\n      initializeWebSocket();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Booking creation failed:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to create booking. Please try again.');\n    } finally {\n      setCreatingBooking(false);\n    }\n  };\n  const initializeWebSocket = () => {\n    if (!(bookingDetails !== null && bookingDetails !== void 0 && bookingDetails.flightId)) return;\n    const socket = new SockJS('http://localhost:8080/ws');\n    stompClient.current = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        setConnected(true);\n        console.log('Connected to WebSocket');\n\n        // Subscribe to seat updates for this flight\n        stompClient.current.subscribe(`/topic/flight/${bookingDetails.flightId}/seats`, message => {\n          const updatedUnavailableSeats = JSON.parse(message.body);\n          setUnavailableSeats(new Set(updatedUnavailableSeats));\n        });\n\n        // Request initial unavailable seats\n        stompClient.current.publish({\n          destination: `/app/flight/${bookingDetails.flightId}/seats`,\n          body: JSON.stringify({})\n        });\n      },\n      onStompError: error => {\n        console.error('WebSocket error:', error);\n        setError('Connection error. Seat availability may not be up to date.');\n      },\n      onDisconnect: () => {\n        setConnected(false);\n      }\n    });\n    stompClient.current.activate();\n  };\n  const handleSeatSelect = seatNumber => {\n    if (unavailableSeats.has(seatNumber)) return;\n    setSelectedSeats(prev => {\n      if (prev.includes(seatNumber)) {\n        releaseSeat(seatNumber);\n        return prev.filter(seat => seat !== seatNumber);\n      } else if (prev.length < passengerCount) {\n        reserveSeat(seatNumber);\n        return [...prev, seatNumber];\n      }\n      return prev;\n    });\n  };\n  const reserveSeat = seatNumber => {\n    if (stompClient.current && connected && bookingDetails) {\n      const reservationRequest = {\n        flightId: bookingDetails.flightId,\n        seatNumber: seatNumber,\n        userId: userId\n      };\n      stompClient.current.publish({\n        destination: '/app/reserve-seat',\n        body: JSON.stringify(reservationRequest)\n      });\n    }\n  };\n  const releaseSeat = seatNumber => {\n    if (stompClient.current && connected && bookingDetails) {\n      const reservationRequest = {\n        flightId: bookingDetails.flightId,\n        seatNumber: seatNumber,\n        userId: userId\n      };\n      stompClient.current.publish({\n        destination: '/app/release-seat',\n        body: JSON.stringify(reservationRequest)\n      });\n    }\n  };\n  const handleConfirmSeats = async () => {\n    if (selectedSeats.length !== passengerCount) {\n      setError(`Please select exactly ${passengerCount} seat(s)`);\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Update booking with selected seats\n      const updateData = {\n        selectedSeats: selectedSeats,\n        seatCharges: selectedSeats.length * seatPrice,\n        totalAmount: (bookingDetails.totalAmount || 0) + selectedSeats.length * seatPrice\n      };\n\n      // In a real app, you would call an API to update the booking with seats\n      // For now, we'll just navigate to payment\n      navigate(`/flights/booking/${bookingDetails.id}`, {\n        state: {\n          bookingDetails: {\n            ...bookingDetails,\n            ...updateData\n          },\n          selectedSeats,\n          seatCharges: selectedSeats.length * seatPrice,\n          totalAmount: (bookingDetails.totalAmount || 0) + selectedSeats.length * seatPrice\n        }\n      });\n    } catch (err) {\n      setError('Failed to save seat selection');\n      console.error('Seat confirmation error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderSeatMap = () => {\n    const seatMap = [];\n\n    // Add cockpit area\n    seatMap.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cockpit-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cockpit\",\n        children: \"Cockpit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)\n    }, \"cockpit\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this));\n\n    // Add seat rows\n    for (let row = 1; row <= rows; row++) {\n      const rowSeats = [];\n\n      // Left side seats (A, B, C)\n      for (let seat = 1; seat <= 3; seat++) {\n        const seatNumber = (row - 1) * seatsPerRow + seat;\n        const seatLabel = `${row}${String.fromCharCode(64 + seat)}`;\n        const isUnavailable = unavailableSeats.has(seatNumber);\n        const isSelected = selectedSeats.includes(seatNumber);\n        const isEmergencyExit = row === 1 || row === rows;\n        rowSeats.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `seat ${isUnavailable ? 'booked' : ''} ${isSelected ? 'selected' : ''} ${isEmergencyExit ? 'emergency' : ''}`,\n          onClick: () => !isUnavailable && handleSeatSelect(seatNumber),\n          children: seatLabel\n        }, `left-${seatNumber}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this));\n      }\n\n      // Aisle\n      rowSeats.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aisle\"\n      }, `aisle-${row}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 27\n      }, this));\n\n      // Right side seats (D, E, F)\n      for (let seat = 4; seat <= 6; seat++) {\n        const seatNumber = (row - 1) * seatsPerRow + seat;\n        const seatLabel = `${row}${String.fromCharCode(64 + seat)}`;\n        const isUnavailable = unavailableSeats.has(seatNumber);\n        const isSelected = selectedSeats.includes(seatNumber);\n        const isEmergencyExit = row === 1 || row === rows;\n        rowSeats.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `seat ${isUnavailable ? 'booked' : ''} ${isSelected ? 'selected' : ''} ${isEmergencyExit ? 'emergency' : ''}`,\n          onClick: () => !isUnavailable && handleSeatSelect(seatNumber),\n          children: seatLabel\n        }, `right-${seatNumber}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this));\n      }\n      seatMap.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat-row\",\n        children: rowSeats\n      }, `row-${row}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this));\n    }\n    return seatMap;\n  };\n\n  // Check if confirm button should be enabled\n  const isConfirmEnabled = selectedSeats.length === passengerCount && connected && !loading;\n  if (creatingBooking) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Creating your booking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this);\n  }\n  if (!bookingDetails && !flightId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Booking Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No booking information found. Please start over.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/flights'),\n        className: \"retry-button\",\n        children: \"Back to Flights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seat-selection-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select Your Seats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), bookingDetails && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Flight \", bookingDetails.flightNumber, \" - \", bookingDetails.departureFrom, \" to \", bookingDetails.arrivalTo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `connection-status ${connected ? 'connected' : 'disconnected'}`,\n          children: connected ? 'Live Updates Enabled' : 'Connecting...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(''),\n          className: \"error-close-btn\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }, this), bookingDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Booking Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Booking Reference:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 32\n            }, this), \" \", bookingDetails.bookingReference]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Passengers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 32\n            }, this), \" \", passengerCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Flight Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 32\n            }, this), \" \", bookingDetails.departureDate || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Departure Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 32\n            }, this), \" \", bookingDetails.departureTime || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat-selection-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"airplane-layout\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"airplane\",\n            children: renderSeatMap()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seat-legend\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Seat Legend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Selected (Temporarily Reserved)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat booked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Unavailable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat emergency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Emergency Exit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-seats-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Your Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this), selectedSeats.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Selected Seats: \", selectedSeats.map(seat => {\n                  const row = Math.ceil(seat / seatsPerRow);\n                  const seatLetter = String.fromCharCode(64 + (seat % seatsPerRow === 0 ? seatsPerRow : seat % seatsPerRow));\n                  return `${row}${seatLetter}`;\n                }).join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Seat Charges: \\u20B9\", selectedSeats.length * seatPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 37\n              }, this), bookingDetails && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Total Amount: \\u20B9\", (bookingDetails.totalAmount || 0) + selectedSeats.length * seatPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No seats selected yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-back\",\n              onClick: () => navigate(-1),\n              disabled: loading,\n              children: \"Back to Booking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn-confirm ${isConfirmEnabled ? '' : 'disabled'}`,\n              onClick: isConfirmEnabled ? handleConfirmSeats : undefined,\n              disabled: !isConfirmEnabled,\n              children: loading ? 'Processing...' : `Confirm ${selectedSeats.length}/${passengerCount} Seats`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this), !connected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection-warning\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u26A0\\uFE0F Waiting for connection to server. Please wait...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 29\n          }, this), selectedSeats.length !== passengerCount && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selection-warning\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Please select \", passengerCount, \" seat(s) to continue.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat-info-note\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 24\n          }, this), \" Seat selection charges are \\u20B9\", seatPrice, \" per seat. Emergency exit rows have extra legroom.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selected seats are temporarily reserved for you while you complete your booking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 9\n  }, this);\n};\n_s(SeatSelectionPage, \"a2qiBjnVaiJ11TyvCsCL/4IfK88=\", true, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = SeatSelectionPage;\nexport default SeatSelectionPage;\nvar _c;\n$RefreshReg$(_c, \"SeatSelectionPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","useLocation","useNavigate","useParams","Client","SockJS","BookedFlightAPI","retrieveAFlightById","jsxDEV","_jsxDEV","SeatSelectionPage","_s","location","navigate","flightId","authContext","useAuth","bookingDetails","setBookingDetails","passengerCount","setPassengerCount","selectedSeats","setSelectedSeats","unavailableSeats","setUnavailableSeats","Set","loading","setLoading","error","setError","connected","setConnected","creatingBooking","setCreatingBooking","stompClient","seatPrice","userId","localStorage","getItem","rows","seatsPerRow","_location$state","state","createBookingFromFlightId","initializeWebSocket","current","deactivate","_bookingResponse$data","flightResponse","flight","data","Error","bookingData","passengers","totalAmount","price","bookingResponse","id","bookingReference","Math","random","toString","substr","toUpperCase","flightNumber","departureFrom","arrivalTo","departureDate","departureTime","err","_err$response","_err$response$data","console","response","message","socket","webSocketFactory","reconnectDelay","onConnect","log","subscribe","updatedUnavailableSeats","JSON","parse","body","publish","destination","stringify","onStompError","onDisconnect","activate","handleSeatSelect","seatNumber","has","prev","includes","releaseSeat","filter","seat","length","reserveSeat","reservationRequest","handleConfirmSeats","updateData","seatCharges","renderSeatMap","seatMap","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","rowSeats","seatLabel","String","fromCharCode","isUnavailable","isSelected","isEmergencyExit","onClick","isConfirmEnabled","map","ceil","seatLetter","join","disabled","undefined","_c","$RefreshReg$"],"sources":["C:/SPRING-BOOT/FlightFrontend/booked-frontend/src/components/SeatSelectionPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { Client } from '@stomp/stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport { BookedFlightAPI, retrieveAFlightById } from '../api/CallingApi';\r\nimport './SeatSelection.css';\r\n\r\nconst SeatSelectionPage = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { flightId } = useParams();\r\n    const authContext = useAuth();\r\n    \r\n    const [bookingDetails, setBookingDetails] = useState(null);\r\n    const [passengerCount, setPassengerCount] = useState(1);\r\n    const [selectedSeats, setSelectedSeats] = useState([]);\r\n    const [unavailableSeats, setUnavailableSeats] = useState(new Set());\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [connected, setConnected] = useState(false);\r\n    const [creatingBooking, setCreatingBooking] = useState(false);\r\n    \r\n    const stompClient = useRef(null);\r\n    const seatPrice = 500;\r\n    const userId = authContext.userId || localStorage.getItem('userId');\r\n\r\n    // Seat configuration\r\n    const rows = 10;\r\n    const seatsPerRow = 6;\r\n\r\n    useEffect(() => {\r\n        // Check if we have booking details from location state\r\n        if (location.state) {\r\n            setBookingDetails(location.state.bookingDetails);\r\n            setPassengerCount(location.state.passengerCount || 1);\r\n        } else if (flightId) {\r\n            // If no booking details, we need to create a booking first\r\n            createBookingFromFlightId(flightId);\r\n        } else {\r\n            navigate('/flights');\r\n            return;\r\n        }\r\n\r\n        // Initialize WebSocket connection only if we have booking details\r\n        if (location.state?.bookingDetails) {\r\n            initializeWebSocket();\r\n        }\r\n\r\n        return () => {\r\n            if (stompClient.current) {\r\n                stompClient.current.deactivate();\r\n            }\r\n        };\r\n    }, [flightId, location.state]);\r\n\r\n    const createBookingFromFlightId = async (flightId) => {\r\n        try {\r\n            setCreatingBooking(true);\r\n            setError('');\r\n            \r\n            // First, get flight details\r\n            const flightResponse = await retrieveAFlightById(flightId);\r\n            const flight = flightResponse.data;\r\n            \r\n            if (!flight) {\r\n                throw new Error('Flight not found');\r\n            }\r\n            \r\n            // Create a basic booking\r\n            const bookingData = {\r\n                flightId: flightId,\r\n                userId: userId,\r\n                passengers: 1, // Default to 1 passenger\r\n                totalAmount: flight.price || 0\r\n            };\r\n            \r\n            const bookingResponse = await BookedFlightAPI(bookingData);\r\n            \r\n            if (!bookingResponse?.data?.id) {\r\n                throw new Error(\"Failed to create booking\");\r\n            }\r\n            \r\n            // Generate booking reference if not provided\r\n            const bookingReference = bookingResponse.data.bookingReference || \r\n                                   `REF-${Math.random().toString(36).substr(2, 9).toUpperCase()}`;\r\n            \r\n            setBookingDetails({\r\n                id: bookingResponse.data.id,\r\n                flightId: flightId,\r\n                flightNumber: flight.flightNumber || `FL${flightId}`,\r\n                departureFrom: flight.departureFrom,\r\n                arrivalTo: flight.arrivalTo,\r\n                departureDate: flight.departureDate,\r\n                departureTime: flight.departureTime,\r\n                totalAmount: flight.price || 0,\r\n                bookingReference: bookingReference,\r\n                ...bookingResponse.data\r\n            });\r\n            \r\n            // Now initialize WebSocket\r\n            initializeWebSocket();\r\n            \r\n        } catch (err) {\r\n            console.error('Booking creation failed:', err);\r\n            setError(err.response?.data?.message || \r\n                    err.message || \r\n                    'Failed to create booking. Please try again.');\r\n        } finally {\r\n            setCreatingBooking(false);\r\n        }\r\n    };\r\n\r\n    const initializeWebSocket = () => {\r\n        if (!bookingDetails?.flightId) return;\r\n        \r\n        const socket = new SockJS('http://localhost:8080/ws');\r\n        stompClient.current = new Client({\r\n            webSocketFactory: () => socket,\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                setConnected(true);\r\n                console.log('Connected to WebSocket');\r\n                \r\n                // Subscribe to seat updates for this flight\r\n                stompClient.current.subscribe(\r\n                    `/topic/flight/${bookingDetails.flightId}/seats`, \r\n                    (message) => {\r\n                        const updatedUnavailableSeats = JSON.parse(message.body);\r\n                        setUnavailableSeats(new Set(updatedUnavailableSeats));\r\n                    }\r\n                );\r\n                \r\n                // Request initial unavailable seats\r\n                stompClient.current.publish({\r\n                    destination: `/app/flight/${bookingDetails.flightId}/seats`,\r\n                    body: JSON.stringify({})\r\n                });\r\n            },\r\n            onStompError: (error) => {\r\n                console.error('WebSocket error:', error);\r\n                setError('Connection error. Seat availability may not be up to date.');\r\n            },\r\n            onDisconnect: () => {\r\n                setConnected(false);\r\n            }\r\n        });\r\n        \r\n        stompClient.current.activate();\r\n    };\r\n\r\n    const handleSeatSelect = (seatNumber) => {\r\n        if (unavailableSeats.has(seatNumber)) return;\r\n\r\n        setSelectedSeats(prev => {\r\n            if (prev.includes(seatNumber)) {\r\n                releaseSeat(seatNumber);\r\n                return prev.filter(seat => seat !== seatNumber);\r\n            } else if (prev.length < passengerCount) {\r\n                reserveSeat(seatNumber);\r\n                return [...prev, seatNumber];\r\n            }\r\n            return prev;\r\n        });\r\n    };\r\n\r\n    const reserveSeat = (seatNumber) => {\r\n        if (stompClient.current && connected && bookingDetails) {\r\n            const reservationRequest = {\r\n                flightId: bookingDetails.flightId,\r\n                seatNumber: seatNumber,\r\n                userId: userId\r\n            };\r\n            \r\n            stompClient.current.publish({\r\n                destination: '/app/reserve-seat',\r\n                body: JSON.stringify(reservationRequest)\r\n            });\r\n        }\r\n    };\r\n\r\n    const releaseSeat = (seatNumber) => {\r\n        if (stompClient.current && connected && bookingDetails) {\r\n            const reservationRequest = {\r\n                flightId: bookingDetails.flightId,\r\n                seatNumber: seatNumber,\r\n                userId: userId\r\n            };\r\n            \r\n            stompClient.current.publish({\r\n                destination: '/app/release-seat',\r\n                body: JSON.stringify(reservationRequest)\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleConfirmSeats = async () => {\r\n        if (selectedSeats.length !== passengerCount) {\r\n            setError(`Please select exactly ${passengerCount} seat(s)`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            \r\n            // Update booking with selected seats\r\n            const updateData = {\r\n                selectedSeats: selectedSeats,\r\n                seatCharges: selectedSeats.length * seatPrice,\r\n                totalAmount: (bookingDetails.totalAmount || 0) + (selectedSeats.length * seatPrice)\r\n            };\r\n            \r\n            // In a real app, you would call an API to update the booking with seats\r\n            // For now, we'll just navigate to payment\r\n            navigate(`/flights/booking/${bookingDetails.id}`, {\r\n                state: {\r\n                    bookingDetails: {\r\n                        ...bookingDetails,\r\n                        ...updateData\r\n                    },\r\n                    selectedSeats,\r\n                    seatCharges: selectedSeats.length * seatPrice,\r\n                    totalAmount: (bookingDetails.totalAmount || 0) + (selectedSeats.length * seatPrice)\r\n                }\r\n            });\r\n            \r\n        } catch (err) {\r\n            setError('Failed to save seat selection');\r\n            console.error('Seat confirmation error:', err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const renderSeatMap = () => {\r\n        const seatMap = [];\r\n        \r\n        // Add cockpit area\r\n        seatMap.push(\r\n            <div key=\"cockpit\" className=\"cockpit-area\">\r\n                <div className=\"cockpit\">Cockpit</div>\r\n            </div>\r\n        );\r\n\r\n        // Add seat rows\r\n        for (let row = 1; row <= rows; row++) {\r\n            const rowSeats = [];\r\n            \r\n            // Left side seats (A, B, C)\r\n            for (let seat = 1; seat <= 3; seat++) {\r\n                const seatNumber = (row - 1) * seatsPerRow + seat;\r\n                const seatLabel = `${row}${String.fromCharCode(64 + seat)}`;\r\n                const isUnavailable = unavailableSeats.has(seatNumber);\r\n                const isSelected = selectedSeats.includes(seatNumber);\r\n                const isEmergencyExit = row === 1 || row === rows;\r\n                \r\n                rowSeats.push(\r\n                    <div\r\n                        key={`left-${seatNumber}`}\r\n                        className={`seat ${isUnavailable ? 'booked' : ''} ${isSelected ? 'selected' : ''} ${isEmergencyExit ? 'emergency' : ''}`}\r\n                        onClick={() => !isUnavailable && handleSeatSelect(seatNumber)}\r\n                    >\r\n                        {seatLabel}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            // Aisle\r\n            rowSeats.push(<div key={`aisle-${row}`} className=\"aisle\"></div>);\r\n\r\n            // Right side seats (D, E, F)\r\n            for (let seat = 4; seat <= 6; seat++) {\r\n                const seatNumber = (row - 1) * seatsPerRow + seat;\r\n                const seatLabel = `${row}${String.fromCharCode(64 + seat)}`;\r\n                const isUnavailable = unavailableSeats.has(seatNumber);\r\n                const isSelected = selectedSeats.includes(seatNumber);\r\n                const isEmergencyExit = row === 1 || row === rows;\r\n                \r\n                rowSeats.push(\r\n                    <div\r\n                        key={`right-${seatNumber}`}\r\n                        className={`seat ${isUnavailable ? 'booked' : ''} ${isSelected ? 'selected' : ''} ${isEmergencyExit ? 'emergency' : ''}`}\r\n                        onClick={() => !isUnavailable && handleSeatSelect(seatNumber)}\r\n                    >\r\n                        {seatLabel}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            seatMap.push(\r\n                <div key={`row-${row}`} className=\"seat-row\">\r\n                    {rowSeats}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return seatMap;\r\n    };\r\n\r\n    // Check if confirm button should be enabled\r\n    const isConfirmEnabled = selectedSeats.length === passengerCount && connected && !loading;\r\n\r\n    if (creatingBooking) {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <p>Creating your booking...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!bookingDetails && !flightId) {\r\n        return (\r\n            <div className=\"error-container\">\r\n                <h3>No Booking Information</h3>\r\n                <p>No booking information found. Please start over.</p>\r\n                <button onClick={() => navigate('/flights')} className=\"retry-button\">\r\n                    Back to Flights\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"seat-selection-page\">\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1>Select Your Seats</h1>\r\n                    {bookingDetails && (\r\n                        <p>Flight {bookingDetails.flightNumber} - {bookingDetails.departureFrom} to {bookingDetails.arrivalTo}</p>\r\n                    )}\r\n                    <div className={`connection-status ${connected ? 'connected' : 'disconnected'}`}>\r\n                        {connected ? 'Live Updates Enabled' : 'Connecting...'}\r\n                    </div>\r\n                </div>\r\n\r\n                {error && (\r\n                    <div className=\"error-message\">\r\n                        <strong>Error:</strong> {error}\r\n                        <button \r\n                            onClick={() => setError('')} \r\n                            className=\"error-close-btn\"\r\n                        >\r\n                            ×\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {bookingDetails && (\r\n                    <div className=\"booking-summary\">\r\n                        <h3>Booking Summary</h3>\r\n                        <div className=\"summary-details\">\r\n                            <p><strong>Booking Reference:</strong> {bookingDetails.bookingReference}</p>\r\n                            <p><strong>Passengers:</strong> {passengerCount}</p>\r\n                            <p><strong>Flight Date:</strong> {bookingDetails.departureDate || 'N/A'}</p>\r\n                            <p><strong>Departure Time:</strong> {bookingDetails.departureTime || 'N/A'}</p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"seat-selection-container\">\r\n                    <div className=\"airplane-layout\">\r\n                        <div className=\"airplane\">\r\n                            {renderSeatMap()}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"selection-info\">\r\n                        <div className=\"seat-legend\">\r\n                            <h4>Seat Legend</h4>\r\n                            <div className=\"legend-item\">\r\n                                <div className=\"seat available\"></div>\r\n                                <span>Available</span>\r\n                            </div>\r\n                            <div className=\"legend-item\">\r\n                                <div className=\"seat selected\"></div>\r\n                                <span>Selected (Temporarily Reserved)</span>\r\n                            </div>\r\n                            <div className=\"legend-item\">\r\n                                <div className=\"seat booked\"></div>\r\n                                <span>Unavailable</span>\r\n                            </div>\r\n                            <div className=\"legend-item\">\r\n                                <div className=\"seat emergency\"></div>\r\n                                <span>Emergency Exit</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"selected-seats-info\">\r\n                            <h4>Your Selection</h4>\r\n                            {selectedSeats.length > 0 ? (\r\n                                <div>\r\n                                    <p>Selected Seats: {selectedSeats.map(seat => {\r\n                                        const row = Math.ceil(seat / seatsPerRow);\r\n                                        const seatLetter = String.fromCharCode(64 + (seat % seatsPerRow === 0 ? seatsPerRow : seat % seatsPerRow));\r\n                                        return `${row}${seatLetter}`;\r\n                                    }).join(', ')}</p>\r\n                                    <p>Seat Charges: ₹{selectedSeats.length * seatPrice}</p>\r\n                                    {bookingDetails && (\r\n                                        <p><strong>Total Amount: ₹{(bookingDetails.totalAmount || 0) + (selectedSeats.length * seatPrice)}</strong></p>\r\n                                    )}\r\n                                </div>\r\n                            ) : (\r\n                                <p>No seats selected yet</p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"action-buttons\">\r\n                            <button \r\n                                className=\"btn-back\"\r\n                                onClick={() => navigate(-1)}\r\n                                disabled={loading}\r\n                            >\r\n                                Back to Booking\r\n                            </button>\r\n                            <button \r\n                                className={`btn-confirm ${isConfirmEnabled ? '' : 'disabled'}`}\r\n                                onClick={isConfirmEnabled ? handleConfirmSeats : undefined}\r\n                                disabled={!isConfirmEnabled}\r\n                            >\r\n                                {loading ? 'Processing...' : `Confirm ${selectedSeats.length}/${passengerCount} Seats`}\r\n                            </button>\r\n                        </div>\r\n\r\n                        {!connected && (\r\n                            <div className=\"connection-warning\">\r\n                                <p>⚠️ Waiting for connection to server. Please wait...</p>\r\n                            </div>\r\n                        )}\r\n\r\n                        {selectedSeats.length !== passengerCount && (\r\n                            <div className=\"selection-warning\">\r\n                                <p>Please select {passengerCount} seat(s) to continue.</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"seat-info-note\">\r\n                    <p><strong>Note:</strong> Seat selection charges are ₹{seatPrice} per seat. Emergency exit rows have extra legroom.</p>\r\n                    <p>Selected seats are temporarily reserved for you while you complete your booking.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeatSelectionPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}