{"ast":null,"code":"import{createContext,useContext,useState,useCallback}from\"react\";import{ExecuteJwtAuthAPI,RegisterUser}from\"../api/CallingApi\";import{urlAPI}from\"../api/ApiClient\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>useContext(AuthContext);export default function AuthProvider(_ref){let{children}=_ref;const[authState,setAuthState]=useState({isAuthenticated:false,email:null,token:null,roles:[],userDetails:null// Add for additional user info\n});// Memoized login function\nconst login=useCallback(async(email,password)=>{try{const response=await ExecuteJwtAuthAPI(email,password);if(response.status===200){const JWToken=`Bearer ${response.data.token}`;const decodedToken=parseJwt(response.data.token);// Set axios interceptor\nurlAPI.interceptors.request.use(config=>{config.headers.Authorization=JWToken;return config;});setAuthState({isAuthenticated:true,email,token:JWToken,roles:decodedToken.roles||[],userDetails:decodedToken.userDetails||null});return true;}logout();return false;}catch(error){logout();console.error(\"Login error:\",error);return false;}},[]);const register=useCallback(async(email,password)=>{try{const response=await RegisterUser({email,password});if(response.status===201||response.status===200){return await login(email,password);}return false;}catch(error){var _error$response;console.error('Registration error:',error);throw((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||{message:'Registration failed'};}},[login]);const logout=useCallback(()=>{// Clear axios interceptor\nurlAPI.interceptors.request.use(config=>{delete config.headers.Authorization;return config;});setAuthState({isAuthenticated:false,email:null,token:null,roles:[],userDetails:null});},[]);// Helper function to parse JWT\nconst parseJwt=token=>{try{const base64Url=token.split('.')[1];const base64=base64Url.replace(/-/g,'+').replace(/_/g,'/');return JSON.parse(atob(base64));}catch(e){console.error(\"JWT parsing error:\",e);return{};}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{authenticated:authState.isAuthenticated,email:authState.email,token:authState.token,roles:authState.roles,user:authState.userDetails||{name:authState.email},login,logout,register},children:children});}","map":{"version":3,"names":["createContext","useContext","useState","useCallback","ExecuteJwtAuthAPI","RegisterUser","urlAPI","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","authState","setAuthState","isAuthenticated","email","token","roles","userDetails","login","password","response","status","JWToken","data","decodedToken","parseJwt","interceptors","request","use","config","headers","Authorization","logout","error","console","register","_error$response","message","base64Url","split","base64","replace","JSON","parse","atob","e","Provider","value","authenticated","user","name"],"sources":["C:/SPRING-BOOT/FlightFrontend/booked-frontend/src/security/MainContext.js"],"sourcesContent":["import { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { ExecuteJwtAuthAPI, RegisterUser } from \"../api/CallingApi\";\r\nimport { urlAPI } from \"../api/ApiClient\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const [authState, setAuthState] = useState({\r\n        isAuthenticated: false,\r\n        email: null,\r\n        token: null,\r\n        roles: [],\r\n        userDetails: null // Add for additional user info\r\n    });\r\n\r\n    // Memoized login function\r\n    const login = useCallback(async (email, password) => {\r\n        try {\r\n            const response = await ExecuteJwtAuthAPI(email, password);\r\n            \r\n            if (response.status === 200) {\r\n                const JWToken = `Bearer ${response.data.token}`;\r\n                const decodedToken = parseJwt(response.data.token);\r\n                \r\n                // Set axios interceptor\r\n                urlAPI.interceptors.request.use((config) => {\r\n                    config.headers.Authorization = JWToken;\r\n                    return config;\r\n                });\r\n\r\n                setAuthState({\r\n                    isAuthenticated: true,\r\n                    email,\r\n                    token: JWToken,\r\n                    roles: decodedToken.roles || [],\r\n                    userDetails: decodedToken.userDetails || null\r\n                });\r\n\r\n                return true;\r\n            }\r\n            logout();\r\n            return false;\r\n        } catch(error) {\r\n            logout();\r\n            console.error(\"Login error:\", error);\r\n            return false;\r\n        }\r\n    }, []);\r\n\r\n    const register = useCallback(async (email, password) => {\r\n        try {\r\n            const response = await RegisterUser({ email, password });\r\n            \r\n            if (response.status === 201 || response.status === 200) {\r\n                return await login(email, password);\r\n            }\r\n            return false;\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            throw error.response?.data || { message: 'Registration failed' };\r\n        }\r\n    }, [login]);\r\n\r\n    const logout = useCallback(() => {\r\n        // Clear axios interceptor\r\n        urlAPI.interceptors.request.use((config) => {\r\n            delete config.headers.Authorization;\r\n            return config;\r\n        });\r\n\r\n        setAuthState({\r\n            isAuthenticated: false,\r\n            email: null,\r\n            token: null,\r\n            roles: [],\r\n            userDetails: null\r\n        });\r\n    }, []);\r\n\r\n    // Helper function to parse JWT\r\n    const parseJwt = (token) => {\r\n        try {\r\n            const base64Url = token.split('.')[1];\r\n            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n            return JSON.parse(atob(base64));\r\n        } catch (e) {\r\n            console.error(\"JWT parsing error:\", e);\r\n            return {};\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            authenticated: authState.isAuthenticated,\r\n            email: authState.email,\r\n            token: authState.token,\r\n            roles: authState.roles,\r\n            user: authState.userDetails || { name: authState.email },\r\n            login,\r\n            logout,\r\n            register\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}