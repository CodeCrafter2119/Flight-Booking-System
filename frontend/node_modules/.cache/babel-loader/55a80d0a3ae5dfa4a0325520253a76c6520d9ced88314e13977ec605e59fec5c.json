{"ast":null,"code":"var _jsxFileName = \"C:\\\\SPRING-BOOT\\\\FlightFrontend\\\\booked-frontend\\\\src\\\\components\\\\SeatSelectionPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport './SeatSelection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeatSelectionPage = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    flightId\n  } = useParams();\n  const [bookingDetails, setBookingDetails] = useState(null);\n  const [passengerCount, setPassengerCount] = useState(1);\n  const [selectedSeats, setSelectedSeats] = useState([]);\n  const [unavailableSeats, setUnavailableSeats] = useState(new Set());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [connectionAttempts, setConnectionAttempts] = useState(0);\n  const stompClient = useRef(null);\n  const seatPrice = 500;\n  const userId = localStorage.getItem('userId') || 'guest';\n  const rows = 10;\n  const seatsPerRow = 6;\n  useEffect(() => {\n    if (location.state) {\n      setBookingDetails(location.state.bookingDetails);\n      setPassengerCount(location.state.passengerCount || 1);\n\n      // Wait a bit before initializing WebSocket to ensure state is set\n      setTimeout(() => {\n        initializeWebSocket();\n      }, 100);\n    } else {\n      navigate('/flights');\n    }\n    return () => {\n      if (stompClient.current) {\n        stompClient.current.deactivate();\n        console.log('WebSocket connection closed');\n      }\n    };\n  }, [location.state]);\n  const initializeWebSocket = () => {\n    if (!(bookingDetails !== null && bookingDetails !== void 0 && bookingDetails.flightId)) {\n      console.log('No flight ID available for WebSocket connection');\n      setError('No flight information available. Please try again.');\n      return;\n    }\n\n    // Convert flightId to number if it's a string\n    const flightIdNum = Number(bookingDetails.flightId);\n    if (isNaN(flightIdNum)) {\n      setError('Invalid flight ID format');\n      return;\n    }\n    console.log('Initializing WebSocket connection to flight:', flightIdNum);\n\n    // Clear previous connection\n    if (stompClient.current) {\n      stompClient.current.deactivate();\n    }\n    try {\n      const socket = new SockJS('http://localhost:8080/ws');\n      stompClient.current = new Client({\n        webSocketFactory: () => socket,\n        reconnectDelay: 5000,\n        heartbeatIncoming: 4000,\n        heartbeatOutgoing: 4000,\n        connectHeaders: {\n          'flightId': flightIdNum.toString()\n        },\n        debug: function (str) {\n          console.log('STOMP:', str);\n        },\n        onConnect: frame => {\n          console.log('✅ WebSocket connected successfully!', frame);\n          setConnected(true);\n          setError('');\n          setConnectionAttempts(0);\n\n          // Subscribe to seat updates\n          stompClient.current.subscribe(`/topic/flight/${flightIdNum}/seats`, message => {\n            console.log('Received seat update:', message.body);\n            try {\n              const updatedUnavailableSeats = JSON.parse(message.body);\n              setUnavailableSeats(new Set(updatedUnavailableSeats));\n            } catch (e) {\n              console.error('Error parsing seat data:', e);\n            }\n          }, {\n            'flightId': flightIdNum.toString()\n          });\n\n          // Request initial unavailable seats\n          console.log('Requesting initial seat data for flight:', flightIdNum);\n          stompClient.current.publish({\n            destination: `/app/flight/${flightIdNum}/seats`,\n            body: JSON.stringify({}),\n            headers: {\n              'flightId': flightIdNum.toString()\n            }\n          });\n        },\n        onStompError: frame => {\n          var _frame$headers;\n          console.error('❌ STOMP error:', frame);\n          setError(`WebSocket protocol error: ${((_frame$headers = frame.headers) === null || _frame$headers === void 0 ? void 0 : _frame$headers.message) || 'Unknown error'}`);\n          setConnected(false);\n          attemptReconnection();\n        },\n        onWebSocketError: event => {\n          console.error('❌ WebSocket error:', event);\n          setError(`Cannot connect to server: ${event.type}. Please check if the server is running on port 8080.`);\n          setConnected(false);\n          attemptReconnection();\n        },\n        onDisconnect: frame => {\n          console.log('WebSocket disconnected:', frame);\n          setConnected(false);\n        }\n      });\n      stompClient.current.activate();\n    } catch (error) {\n      console.error('❌ WebSocket initialization failed:', error);\n      setError(`Failed to initialize WebSocket: ${error.message}`);\n      setConnected(false);\n      attemptReconnection();\n    }\n  };\n  const attemptReconnection = () => {\n    if (connectionAttempts < 3) {\n      const nextAttempt = connectionAttempts + 1;\n      setConnectionAttempts(nextAttempt);\n      setError(`${error} (Retry ${nextAttempt}/3 in 3 seconds)`);\n      setTimeout(() => {\n        initializeWebSocket();\n      }, 3000);\n    } else {\n      setError('Maximum connection attempts reached. Please refresh the page.');\n    }\n  };\n  const handleSeatSelect = seatNumber => {\n    if (unavailableSeats.has(seatNumber) || !connected) {\n      console.log('Cannot select seat - unavailable or not connected');\n      return;\n    }\n    setSelectedSeats(prev => {\n      if (prev.includes(seatNumber)) {\n        releaseSeat(seatNumber);\n        return prev.filter(seat => seat !== seatNumber);\n      } else if (prev.length < passengerCount) {\n        reserveSeat(seatNumber);\n        return [...prev, seatNumber];\n      }\n      return prev;\n    });\n  };\n  const reserveSeat = seatNumber => {\n    if (stompClient.current && connected && bookingDetails) {\n      try {\n        console.log('Reserving seat:', seatNumber);\n        const flightIdNum = Number(bookingDetails.flightId);\n        const reservationRequest = {\n          flightId: flightIdNum,\n          seatNumber: seatNumber,\n          userId: userId\n        };\n        stompClient.current.publish({\n          destination: '/app/reserve-seat',\n          body: JSON.stringify(reservationRequest)\n        });\n      } catch (error) {\n        console.error('Error reserving seat:', error);\n        setError('Failed to reserve seat. Please try again.');\n      }\n    }\n  };\n  const releaseSeat = seatNumber => {\n    if (stompClient.current && connected && bookingDetails) {\n      try {\n        console.log('Releasing seat:', seatNumber);\n        const flightIdNum = Number(bookingDetails.flightId);\n        const reservationRequest = {\n          flightId: flightIdNum,\n          seatNumber: seatNumber,\n          userId: userId\n        };\n        stompClient.current.publish({\n          destination: '/app/release-seat',\n          body: JSON.stringify(reservationRequest)\n        });\n      } catch (error) {\n        console.error('Error releasing seat:', error);\n      }\n    }\n  };\n  const handleManualSeatSelection = seatNumber => {\n    // Fallback function if WebSocket is not connected\n    if (unavailableSeats.has(seatNumber)) {\n      return;\n    }\n    setSelectedSeats(prev => {\n      if (prev.includes(seatNumber)) {\n        return prev.filter(seat => seat !== seatNumber);\n      } else if (prev.length < passengerCount) {\n        return [...prev, seatNumber];\n      }\n      return prev;\n    });\n  };\n  const handleConfirmSeats = async () => {\n    if (selectedSeats.length !== passengerCount) {\n      setError(`Please select exactly ${passengerCount} seat(s)`);\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // If WebSocket is connected, release all temporarily reserved seats\n      if (connected && stompClient.current) {\n        selectedSeats.forEach(seat => {\n          const flightIdNum = Number(bookingDetails.flightId);\n          const reservationRequest = {\n            flightId: flightIdNum,\n            seatNumber: seat,\n            userId: userId\n          };\n          stompClient.current.publish({\n            destination: '/app/release-seat',\n            body: JSON.stringify(reservationRequest)\n          });\n        });\n      }\n      navigate(`/flights/booking/${bookingDetails.id}`, {\n        state: {\n          bookingDetails: {\n            ...bookingDetails,\n            selectedSeats: selectedSeats,\n            seatCharges: selectedSeats.length * seatPrice,\n            totalAmount: (bookingDetails.totalAmount || 0) + selectedSeats.length * seatPrice\n          },\n          selectedSeats,\n          seatCharges: selectedSeats.length * seatPrice,\n          totalAmount: (bookingDetails.totalAmount || 0) + selectedSeats.length * seatPrice\n        }\n      });\n    } catch (err) {\n      setError('Failed to proceed to payment');\n      console.error('Navigation error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderSeatMap = () => {\n    const seatMap = [];\n\n    // Add cockpit area\n    seatMap.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cockpit-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cockpit\",\n        children: \"Cockpit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)\n    }, \"cockpit\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this));\n\n    // Add seat rows\n    for (let row = 1; row <= rows; row++) {\n      const rowSeats = [];\n\n      // Left side seats (A, B, C)\n      for (let seat = 1; seat <= 3; seat++) {\n        const seatNumber = (row - 1) * seatsPerRow + seat;\n        const seatLabel = `${row}${String.fromCharCode(64 + seat)}`;\n        const isUnavailable = unavailableSeats.has(seatNumber);\n        const isSelected = selectedSeats.includes(seatNumber);\n        const isEmergencyExit = row === 1 || row === rows;\n        rowSeats.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `seat ${isUnavailable ? 'booked' : ''} ${isSelected ? 'selected' : ''} ${isEmergencyExit ? 'emergency' : ''}`,\n          onClick: () => !isUnavailable && handleManualSeatSelection(seatNumber),\n          title: isUnavailable ? 'Already booked' : `Seat ${seatLabel}`,\n          children: seatLabel\n        }, `left-${seatNumber}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this));\n      }\n\n      // Aisle\n      rowSeats.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aisle\"\n      }, `aisle-${row}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 27\n      }, this));\n\n      // Right side seats (D, E, F)\n      for (let seat = 4; seat <= 6; seat++) {\n        const seatNumber = (row - 1) * seatsPerRow + seat;\n        const seatLabel = `${row}${String.fromCharCode(64 + seat)}`;\n        const isUnavailable = unavailableSeats.has(seatNumber);\n        const isSelected = selectedSeats.includes(seatNumber);\n        const isEmergencyExit = row === 1 || row === rows;\n        rowSeats.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `seat ${isUnavailable ? 'booked' : ''} ${isSelected ? 'selected' : ''} ${isEmergencyExit ? 'emergency' : ''}`,\n          onClick: () => !isUnavailable && handleManualSeatSelection(seatNumber),\n          title: isUnavailable ? 'Already booked' : `Seat ${seatLabel}`,\n          children: seatLabel\n        }, `right-${seatNumber}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this));\n      }\n      seatMap.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat-row\",\n        children: rowSeats\n      }, `row-${row}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this));\n    }\n    return seatMap;\n  };\n  const isConfirmEnabled = selectedSeats.length === passengerCount && !loading;\n  if (!bookingDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Booking Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No booking information found. Please start over.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/flights'),\n        className: \"retry-button\",\n        children: \"Back to Flights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seat-selection-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select Your Seats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), bookingDetails && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Flight \", bookingDetails.flightNumber, \" - \", bookingDetails.departureFrom, \" to \", bookingDetails.arrivalTo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `connection-status ${connected ? 'connected' : 'disconnected'}`,\n          children: connected ? '✅ Connected' : '❌ Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Connection Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setError('');\n            setConnectionAttempts(0);\n            initializeWebSocket();\n          },\n          className: \"retry-button-small\",\n          children: \"Retry Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }, this), bookingDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Booking Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Booking Reference:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 32\n            }, this), \" \", bookingDetails.bookingReference]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Passengers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 32\n            }, this), \" \", passengerCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Flight Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 32\n            }, this), \" \", bookingDetails.departureDate || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Departure Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 32\n            }, this), \" \", bookingDetails.departureTime || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Flight ID: \", (bookingDetails === null || bookingDetails === void 0 ? void 0 : bookingDetails.flightId) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"WebSocket Status: \", connected ? 'Connected' : 'Disconnected']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connection Attempts: \", connectionAttempts]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Unavailable Seats: \", Array.from(unavailableSeats).join(', ') || 'None']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server URL: http://localhost:8080/ws\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-troubleshooting\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u26A0\\uFE0F Connection Troubleshooting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If WebSocket connection fails:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Ensure your Spring Boot server is running on port 8080\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Check that WebSocket is enabled in your backend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Verify CORS settings in your Spring Boot configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Try accessing \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:8080/ws\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"http://localhost:8080/ws\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 43\n            }, this), \" in your browser\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat-selection-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"airplane-layout\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"airplane\",\n            children: renderSeatMap()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seat-legend\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Seat Legend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat booked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Unavailable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat emergency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Emergency Exit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-seats-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Your Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 29\n            }, this), selectedSeats.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Selected Seats: \", selectedSeats.map(seat => {\n                  const row = Math.ceil(seat / seatsPerRow);\n                  const seatLetter = String.fromCharCode(64 + (seat % seatsPerRow === 0 ? seatsPerRow : seat % seatsPerRow));\n                  return `${row}${seatLetter}`;\n                }).join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Seat Charges: \\u20B9\", selectedSeats.length * seatPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 37\n              }, this), bookingDetails && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Total Amount: \\u20B9\", (bookingDetails.totalAmount || 0) + selectedSeats.length * seatPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No seats selected yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-back\",\n              onClick: () => navigate(-1),\n              disabled: loading,\n              children: \"Back to Booking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn-confirm ${isConfirmEnabled ? '' : 'disabled'}`,\n              onClick: isConfirmEnabled ? handleConfirmSeats : undefined,\n              disabled: !isConfirmEnabled,\n              children: loading ? 'Processing...' : `Confirm ${selectedSeats.length}/${passengerCount} Seats`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 25\n          }, this), !connected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection-warning\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u26A0\\uFE0F WebSocket not connected. Seat availability may not be accurate.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You can still select seats and proceed to payment.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 29\n          }, this), selectedSeats.length !== passengerCount && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selection-warning\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Please select \", passengerCount, \" seat(s) to continue.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat-info-note\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 24\n          }, this), \" Seat selection charges are \\u20B9\", seatPrice, \" per seat. Emergency exit rows have extra legroom.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selected seats are temporarily reserved for you while you complete your booking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 9\n  }, this);\n};\n_s(SeatSelectionPage, \"uTlyU9BoOhWwZO5caHGuSoqWTMQ=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = SeatSelectionPage;\nexport default SeatSelectionPage;\nvar _c;\n$RefreshReg$(_c, \"SeatSelectionPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","useNavigate","useParams","Client","SockJS","jsxDEV","_jsxDEV","SeatSelectionPage","_s","location","navigate","flightId","bookingDetails","setBookingDetails","passengerCount","setPassengerCount","selectedSeats","setSelectedSeats","unavailableSeats","setUnavailableSeats","Set","loading","setLoading","error","setError","connected","setConnected","connectionAttempts","setConnectionAttempts","stompClient","seatPrice","userId","localStorage","getItem","rows","seatsPerRow","state","setTimeout","initializeWebSocket","current","deactivate","console","log","flightIdNum","Number","isNaN","socket","webSocketFactory","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","connectHeaders","toString","debug","str","onConnect","frame","subscribe","message","body","updatedUnavailableSeats","JSON","parse","e","publish","destination","stringify","headers","onStompError","_frame$headers","attemptReconnection","onWebSocketError","event","type","onDisconnect","activate","nextAttempt","handleSeatSelect","seatNumber","has","prev","includes","releaseSeat","filter","seat","length","reserveSeat","reservationRequest","handleManualSeatSelection","handleConfirmSeats","forEach","id","seatCharges","totalAmount","err","renderSeatMap","seatMap","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","rowSeats","seatLabel","String","fromCharCode","isUnavailable","isSelected","isEmergencyExit","onClick","title","isConfirmEnabled","flightNumber","departureFrom","arrivalTo","bookingReference","departureDate","departureTime","Array","from","join","href","target","rel","map","Math","ceil","seatLetter","disabled","undefined","_c","$RefreshReg$"],"sources":["C:/SPRING-BOOT/FlightFrontend/booked-frontend/src/components/SeatSelectionPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { Client } from '@stomp/stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport './SeatSelection.css';\r\n\r\nconst SeatSelectionPage = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { flightId } = useParams();\r\n    \r\n    const [bookingDetails, setBookingDetails] = useState(null);\r\n    const [passengerCount, setPassengerCount] = useState(1);\r\n    const [selectedSeats, setSelectedSeats] = useState([]);\r\n    const [unavailableSeats, setUnavailableSeats] = useState(new Set());\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [connected, setConnected] = useState(false);\r\n    const [connectionAttempts, setConnectionAttempts] = useState(0);\r\n    \r\n    const stompClient = useRef(null);\r\n    const seatPrice = 500;\r\n    const userId = localStorage.getItem('userId') || 'guest';\r\n\r\n    const rows = 10;\r\n    const seatsPerRow = 6;\r\n\r\n    useEffect(() => {\r\n        if (location.state) {\r\n            setBookingDetails(location.state.bookingDetails);\r\n            setPassengerCount(location.state.passengerCount || 1);\r\n            \r\n            // Wait a bit before initializing WebSocket to ensure state is set\r\n            setTimeout(() => {\r\n                initializeWebSocket();\r\n            }, 100);\r\n        } else {\r\n            navigate('/flights');\r\n        }\r\n\r\n        return () => {\r\n            if (stompClient.current) {\r\n                stompClient.current.deactivate();\r\n                console.log('WebSocket connection closed');\r\n            }\r\n        };\r\n    }, [location.state]);\r\n\r\n    const initializeWebSocket = () => {\r\n        if (!bookingDetails?.flightId) {\r\n            console.log('No flight ID available for WebSocket connection');\r\n            setError('No flight information available. Please try again.');\r\n            return;\r\n        }\r\n\r\n        // Convert flightId to number if it's a string\r\n        const flightIdNum = Number(bookingDetails.flightId);\r\n        if (isNaN(flightIdNum)) {\r\n            setError('Invalid flight ID format');\r\n            return;\r\n        }\r\n\r\n        console.log('Initializing WebSocket connection to flight:', flightIdNum);\r\n        \r\n        // Clear previous connection\r\n        if (stompClient.current) {\r\n            stompClient.current.deactivate();\r\n        }\r\n\r\n        try {\r\n            const socket = new SockJS('http://localhost:8080/ws');\r\n            \r\n            stompClient.current = new Client({\r\n                webSocketFactory: () => socket,\r\n                reconnectDelay: 5000,\r\n                heartbeatIncoming: 4000,\r\n                heartbeatOutgoing: 4000,\r\n                connectHeaders: {\r\n                    'flightId': flightIdNum.toString()\r\n                },\r\n                \r\n                debug: function(str) {\r\n                    console.log('STOMP:', str);\r\n                },\r\n                \r\n                onConnect: (frame) => {\r\n                    console.log('✅ WebSocket connected successfully!', frame);\r\n                    setConnected(true);\r\n                    setError('');\r\n                    setConnectionAttempts(0);\r\n                    \r\n                    // Subscribe to seat updates\r\n                    stompClient.current.subscribe(\r\n                        `/topic/flight/${flightIdNum}/seats`, \r\n                        (message) => {\r\n                            console.log('Received seat update:', message.body);\r\n                            try {\r\n                                const updatedUnavailableSeats = JSON.parse(message.body);\r\n                                setUnavailableSeats(new Set(updatedUnavailableSeats));\r\n                            } catch (e) {\r\n                                console.error('Error parsing seat data:', e);\r\n                            }\r\n                        },\r\n                        { 'flightId': flightIdNum.toString() }\r\n                    );\r\n                    \r\n                    // Request initial unavailable seats\r\n                    console.log('Requesting initial seat data for flight:', flightIdNum);\r\n                    stompClient.current.publish({\r\n                        destination: `/app/flight/${flightIdNum}/seats`,\r\n                        body: JSON.stringify({}),\r\n                        headers: { 'flightId': flightIdNum.toString() }\r\n                    });\r\n                },\r\n                \r\n                onStompError: (frame) => {\r\n                    console.error('❌ STOMP error:', frame);\r\n                    setError(`WebSocket protocol error: ${frame.headers?.message || 'Unknown error'}`);\r\n                    setConnected(false);\r\n                    attemptReconnection();\r\n                },\r\n                \r\n                onWebSocketError: (event) => {\r\n                    console.error('❌ WebSocket error:', event);\r\n                    setError(`Cannot connect to server: ${event.type}. Please check if the server is running on port 8080.`);\r\n                    setConnected(false);\r\n                    attemptReconnection();\r\n                },\r\n                \r\n                onDisconnect: (frame) => {\r\n                    console.log('WebSocket disconnected:', frame);\r\n                    setConnected(false);\r\n                }\r\n            });\r\n            \r\n            stompClient.current.activate();\r\n            \r\n        } catch (error) {\r\n            console.error('❌ WebSocket initialization failed:', error);\r\n            setError(`Failed to initialize WebSocket: ${error.message}`);\r\n            setConnected(false);\r\n            attemptReconnection();\r\n        }\r\n    };\r\n\r\n    const attemptReconnection = () => {\r\n        if (connectionAttempts < 3) {\r\n            const nextAttempt = connectionAttempts + 1;\r\n            setConnectionAttempts(nextAttempt);\r\n            setError(`${error} (Retry ${nextAttempt}/3 in 3 seconds)`);\r\n            \r\n            setTimeout(() => {\r\n                initializeWebSocket();\r\n            }, 3000);\r\n        } else {\r\n            setError('Maximum connection attempts reached. Please refresh the page.');\r\n        }\r\n    };\r\n\r\n    const handleSeatSelect = (seatNumber) => {\r\n        if (unavailableSeats.has(seatNumber) || !connected) {\r\n            console.log('Cannot select seat - unavailable or not connected');\r\n            return;\r\n        }\r\n\r\n        setSelectedSeats(prev => {\r\n            if (prev.includes(seatNumber)) {\r\n                releaseSeat(seatNumber);\r\n                return prev.filter(seat => seat !== seatNumber);\r\n            } else if (prev.length < passengerCount) {\r\n                reserveSeat(seatNumber);\r\n                return [...prev, seatNumber];\r\n            }\r\n            return prev;\r\n        });\r\n    };\r\n\r\n    const reserveSeat = (seatNumber) => {\r\n        if (stompClient.current && connected && bookingDetails) {\r\n            try {\r\n                console.log('Reserving seat:', seatNumber);\r\n                const flightIdNum = Number(bookingDetails.flightId);\r\n                const reservationRequest = {\r\n                    flightId: flightIdNum,\r\n                    seatNumber: seatNumber,\r\n                    userId: userId\r\n                };\r\n                \r\n                stompClient.current.publish({\r\n                    destination: '/app/reserve-seat',\r\n                    body: JSON.stringify(reservationRequest)\r\n                });\r\n            } catch (error) {\r\n                console.error('Error reserving seat:', error);\r\n                setError('Failed to reserve seat. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const releaseSeat = (seatNumber) => {\r\n        if (stompClient.current && connected && bookingDetails) {\r\n            try {\r\n                console.log('Releasing seat:', seatNumber);\r\n                const flightIdNum = Number(bookingDetails.flightId);\r\n                const reservationRequest = {\r\n                    flightId: flightIdNum,\r\n                    seatNumber: seatNumber,\r\n                    userId: userId\r\n                };\r\n                \r\n                stompClient.current.publish({\r\n                    destination: '/app/release-seat',\r\n                    body: JSON.stringify(reservationRequest)\r\n                });\r\n            } catch (error) {\r\n                console.error('Error releasing seat:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleManualSeatSelection = (seatNumber) => {\r\n        // Fallback function if WebSocket is not connected\r\n        if (unavailableSeats.has(seatNumber)) {\r\n            return;\r\n        }\r\n\r\n        setSelectedSeats(prev => {\r\n            if (prev.includes(seatNumber)) {\r\n                return prev.filter(seat => seat !== seatNumber);\r\n            } else if (prev.length < passengerCount) {\r\n                return [...prev, seatNumber];\r\n            }\r\n            return prev;\r\n        });\r\n    };\r\n\r\n    const handleConfirmSeats = async () => {\r\n        if (selectedSeats.length !== passengerCount) {\r\n            setError(`Please select exactly ${passengerCount} seat(s)`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            \r\n            // If WebSocket is connected, release all temporarily reserved seats\r\n            if (connected && stompClient.current) {\r\n                selectedSeats.forEach(seat => {\r\n                    const flightIdNum = Number(bookingDetails.flightId);\r\n                    const reservationRequest = {\r\n                        flightId: flightIdNum,\r\n                        seatNumber: seat,\r\n                        userId: userId\r\n                    };\r\n                    \r\n                    stompClient.current.publish({\r\n                        destination: '/app/release-seat',\r\n                        body: JSON.stringify(reservationRequest)\r\n                    });\r\n                });\r\n            }\r\n            \r\n            navigate(`/flights/booking/${bookingDetails.id}`, {\r\n                state: {\r\n                    bookingDetails: {\r\n                        ...bookingDetails,\r\n                        selectedSeats: selectedSeats,\r\n                        seatCharges: selectedSeats.length * seatPrice,\r\n                        totalAmount: (bookingDetails.totalAmount || 0) + (selectedSeats.length * seatPrice)\r\n                    },\r\n                    selectedSeats,\r\n                    seatCharges: selectedSeats.length * seatPrice,\r\n                    totalAmount: (bookingDetails.totalAmount || 0) + (selectedSeats.length * seatPrice)\r\n                }\r\n            });\r\n            \r\n        } catch (err) {\r\n            setError('Failed to proceed to payment');\r\n            console.error('Navigation error:', err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const renderSeatMap = () => {\r\n        const seatMap = [];\r\n        \r\n        // Add cockpit area\r\n        seatMap.push(\r\n            <div key=\"cockpit\" className=\"cockpit-area\">\r\n                <div className=\"cockpit\">Cockpit</div>\r\n            </div>\r\n        );\r\n\r\n        // Add seat rows\r\n        for (let row = 1; row <= rows; row++) {\r\n            const rowSeats = [];\r\n            \r\n            // Left side seats (A, B, C)\r\n            for (let seat = 1; seat <= 3; seat++) {\r\n                const seatNumber = (row - 1) * seatsPerRow + seat;\r\n                const seatLabel = `${row}${String.fromCharCode(64 + seat)}`;\r\n                const isUnavailable = unavailableSeats.has(seatNumber);\r\n                const isSelected = selectedSeats.includes(seatNumber);\r\n                const isEmergencyExit = row === 1 || row === rows;\r\n                \r\n                rowSeats.push(\r\n                    <div\r\n                        key={`left-${seatNumber}`}\r\n                        className={`seat ${isUnavailable ? 'booked' : ''} ${isSelected ? 'selected' : ''} ${isEmergencyExit ? 'emergency' : ''}`}\r\n                        onClick={() => !isUnavailable && handleManualSeatSelection(seatNumber)}\r\n                        title={isUnavailable ? 'Already booked' : `Seat ${seatLabel}`}\r\n                    >\r\n                        {seatLabel}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            // Aisle\r\n            rowSeats.push(<div key={`aisle-${row}`} className=\"aisle\"></div>);\r\n\r\n            // Right side seats (D, E, F)\r\n            for (let seat = 4; seat <= 6; seat++) {\r\n                const seatNumber = (row - 1) * seatsPerRow + seat;\r\n                const seatLabel = `${row}${String.fromCharCode(64 + seat)}`;\r\n                const isUnavailable = unavailableSeats.has(seatNumber);\r\n                const isSelected = selectedSeats.includes(seatNumber);\r\n                const isEmergencyExit = row === 1 || row === rows;\r\n                \r\n                rowSeats.push(\r\n                    <div\r\n                        key={`right-${seatNumber}`}\r\n                        className={`seat ${isUnavailable ? 'booked' : ''} ${isSelected ? 'selected' : ''} ${isEmergencyExit ? 'emergency' : ''}`}\r\n                        onClick={() => !isUnavailable && handleManualSeatSelection(seatNumber)}\r\n                        title={isUnavailable ? 'Already booked' : `Seat ${seatLabel}`}\r\n                    >\r\n                        {seatLabel}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            seatMap.push(\r\n                <div key={`row-${row}`} className=\"seat-row\">\r\n                    {rowSeats}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return seatMap;\r\n    };\r\n\r\n    const isConfirmEnabled = selectedSeats.length === passengerCount && !loading;\r\n\r\n    if (!bookingDetails) {\r\n        return (\r\n            <div className=\"error-container\">\r\n                <h3>No Booking Information</h3>\r\n                <p>No booking information found. Please start over.</p>\r\n                <button onClick={() => navigate('/flights')} className=\"retry-button\">\r\n                    Back to Flights\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"seat-selection-page\">\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1>Select Your Seats</h1>\r\n                    {bookingDetails && (\r\n                        <p>Flight {bookingDetails.flightNumber} - {bookingDetails.departureFrom} to {bookingDetails.arrivalTo}</p>\r\n                    )}\r\n                    <div className={`connection-status ${connected ? 'connected' : 'disconnected'}`}>\r\n                        {connected ? '✅ Connected' : '❌ Disconnected'}\r\n                    </div>\r\n                </div>\r\n\r\n                {error && (\r\n                    <div className=\"error-message\">\r\n                        <strong>Connection Status:</strong> {error}\r\n                        <button \r\n                            onClick={() => {\r\n                                setError('');\r\n                                setConnectionAttempts(0);\r\n                                initializeWebSocket();\r\n                            }} \r\n                            className=\"retry-button-small\"\r\n                        >\r\n                            Retry Connection\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {bookingDetails && (\r\n                    <div className=\"booking-summary\">\r\n                        <h3>Booking Summary</h3>\r\n                        <div className=\"summary-details\">\r\n                            <p><strong>Booking Reference:</strong> {bookingDetails.bookingReference}</p>\r\n                            <p><strong>Passengers:</strong> {passengerCount}</p>\r\n                            <p><strong>Flight Date:</strong> {bookingDetails.departureDate || 'N/A'}</p>\r\n                            <p><strong>Departure Time:</strong> {bookingDetails.departureTime || 'N/A'}</p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"debug-info\">\r\n                    <h4>Debug Information</h4>\r\n                    <p>Flight ID: {bookingDetails?.flightId || 'N/A'}</p>\r\n                    <p>WebSocket Status: {connected ? 'Connected' : 'Disconnected'}</p>\r\n                    <p>Connection Attempts: {connectionAttempts}</p>\r\n                    <p>Unavailable Seats: {Array.from(unavailableSeats).join(', ') || 'None'}</p>\r\n                    <p>Server URL: http://localhost:8080/ws</p>\r\n                </div>\r\n\r\n                <div className=\"connection-troubleshooting\">\r\n                    <h4>⚠️ Connection Troubleshooting</h4>\r\n                    <p>If WebSocket connection fails:</p>\r\n                    <ol>\r\n                        <li>Ensure your Spring Boot server is running on port 8080</li>\r\n                        <li>Check that WebSocket is enabled in your backend</li>\r\n                        <li>Verify CORS settings in your Spring Boot configuration</li>\r\n                        <li>Try accessing <a href=\"http://localhost:8080/ws\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8080/ws</a> in your browser</li>\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className=\"seat-selection-container\">\r\n                    <div className=\"airplane-layout\">\r\n                        <div className=\"airplane\">\r\n                            {renderSeatMap()}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"selection-info\">\r\n                        <div className=\"seat-legend\">\r\n                            <h4>Seat Legend</h4>\r\n                            <div className=\"legend-item\">\r\n                                <div className=\"seat available\"></div>\r\n                                <span>Available</span>\r\n                            </div>\r\n                            <div className=\"legend-item\">\r\n                                <div className=\"seat selected\"></div>\r\n                                <span>Selected</span>\r\n                            </div>\r\n                            <div className=\"legend-item\">\r\n                                <div className=\"seat booked\"></div>\r\n                                <span>Unavailable</span>\r\n                            </div>\r\n                            <div className=\"legend-item\">\r\n                                <div className=\"seat emergency\"></div>\r\n                                <span>Emergency Exit</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"selected-seats-info\">\r\n                            <h4>Your Selection</h4>\r\n                            {selectedSeats.length > 0 ? (\r\n                                <div>\r\n                                    <p>Selected Seats: {selectedSeats.map(seat => {\r\n                                        const row = Math.ceil(seat / seatsPerRow);\r\n                                        const seatLetter = String.fromCharCode(64 + (seat % seatsPerRow === 0 ? seatsPerRow : seat % seatsPerRow));\r\n                                        return `${row}${seatLetter}`;\r\n                                    }).join(', ')}</p>\r\n                                    <p>Seat Charges: ₹{selectedSeats.length * seatPrice}</p>\r\n                                    {bookingDetails && (\r\n                                        <p><strong>Total Amount: ₹{(bookingDetails.totalAmount || 0) + (selectedSeats.length * seatPrice)}</strong></p>\r\n                                    )}\r\n                                </div>\r\n                            ) : (\r\n                                <p>No seats selected yet</p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"action-buttons\">\r\n                            <button \r\n                                className=\"btn-back\"\r\n                                onClick={() => navigate(-1)}\r\n                                disabled={loading}\r\n                            >\r\n                                Back to Booking\r\n                            </button>\r\n                            <button \r\n                                className={`btn-confirm ${isConfirmEnabled ? '' : 'disabled'}`}\r\n                                onClick={isConfirmEnabled ? handleConfirmSeats : undefined}\r\n                                disabled={!isConfirmEnabled}\r\n                            >\r\n                                {loading ? 'Processing...' : `Confirm ${selectedSeats.length}/${passengerCount} Seats`}\r\n                            </button>\r\n                        </div>\r\n\r\n                        {!connected && (\r\n                            <div className=\"connection-warning\">\r\n                                <p>⚠️ WebSocket not connected. Seat availability may not be accurate.</p>\r\n                                <p>You can still select seats and proceed to payment.</p>\r\n                            </div>\r\n                        )}\r\n\r\n                        {selectedSeats.length !== passengerCount && (\r\n                            <div className=\"selection-warning\">\r\n                                <p>Please select {passengerCount} seat(s) to continue.</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"seat-info-note\">\r\n                    <p><strong>Note:</strong> Seat selection charges are ₹{seatPrice} per seat. Emergency exit rows have extra legroom.</p>\r\n                    <p>Selected seats are temporarily reserved for you while you complete your booking.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeatSelectionPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}