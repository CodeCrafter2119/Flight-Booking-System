{"ast":null,"code":"async function onSubmit(values, {\n  setSubmitting\n}) {\n  try {\n    var _bookingResponse$data;\n    const ticket = {\n      flightId: values.flightId,\n      passenger: values.passenger,\n      passengerName: values.passengerName,\n      passengerName2: values.passengerName2,\n      passengerAdult: values.passengerAdult,\n      passengerAdult2: values.passengerAdult2,\n      dateOfBirth: values.dateOfBirth,\n      dateOfBirth2: values.dateOfBirth2,\n      contactNo: values.contactNo\n    };\n    const bookingResponse = await BookedFlightAPI(ticket);\n    if (!(bookingResponse !== null && bookingResponse !== void 0 && (_bookingResponse$data = bookingResponse.data) !== null && _bookingResponse$data !== void 0 && _bookingResponse$data.id)) {\n      throw new Error(\"Invalid booking response - missing ID\");\n    }\n\n    // Navigate to payment page with the booking ID\n    navigate(`/flights/booking/${bookingResponse.data.id}`);\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error(\"Booking failed:\", error);\n    setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || \"Booking failed. Please try again.\");\n  } finally {\n    setSubmitting(false);\n  }\n}","map":{"version":3,"names":["onSubmit","values","setSubmitting","_bookingResponse$data","ticket","flightId","passenger","passengerName","passengerName2","passengerAdult","passengerAdult2","dateOfBirth","dateOfBirth2","contactNo","bookingResponse","BookedFlightAPI","data","id","Error","navigate","error","_error$response","_error$response$data","console","setError","response","message"],"sources":["C:/SPRING-BOOT/FlightFrontend/booked-frontend/src/components/PaymentPage.jsx"],"sourcesContent":["async function onSubmit(values, { setSubmitting }) {\r\n    try {\r\n        const ticket = {\r\n            flightId: values.flightId,\r\n            passenger: values.passenger,\r\n            passengerName: values.passengerName,\r\n            passengerName2: values.passengerName2,\r\n            passengerAdult: values.passengerAdult,\r\n            passengerAdult2: values.passengerAdult2,\r\n            dateOfBirth: values.dateOfBirth,\r\n            dateOfBirth2: values.dateOfBirth2,\r\n            contactNo: values.contactNo\r\n        };\r\n        \r\n        const bookingResponse = await BookedFlightAPI(ticket);\r\n        \r\n        if (!bookingResponse?.data?.id) {\r\n            throw new Error(\"Invalid booking response - missing ID\");\r\n        }\r\n        \r\n        // Navigate to payment page with the booking ID\r\n        navigate(`/flights/booking/${bookingResponse.data.id}`);\r\n        \r\n    } catch (error) {\r\n        console.error(\"Booking failed:\", error);\r\n        setError(error.response?.data?.message || \r\n               error.message || \r\n               \"Booking failed. Please try again.\");\r\n    } finally {\r\n        setSubmitting(false);\r\n    }\r\n}"],"mappings":"AAAA,eAAeA,QAAQA,CAACC,MAAM,EAAE;EAAEC;AAAc,CAAC,EAAE;EAC/C,IAAI;IAAA,IAAAC,qBAAA;IACA,MAAMC,MAAM,GAAG;MACXC,QAAQ,EAAEJ,MAAM,CAACI,QAAQ;MACzBC,SAAS,EAAEL,MAAM,CAACK,SAAS;MAC3BC,aAAa,EAAEN,MAAM,CAACM,aAAa;MACnCC,cAAc,EAAEP,MAAM,CAACO,cAAc;MACrCC,cAAc,EAAER,MAAM,CAACQ,cAAc;MACrCC,eAAe,EAAET,MAAM,CAACS,eAAe;MACvCC,WAAW,EAAEV,MAAM,CAACU,WAAW;MAC/BC,YAAY,EAAEX,MAAM,CAACW,YAAY;MACjCC,SAAS,EAAEZ,MAAM,CAACY;IACtB,CAAC;IAED,MAAMC,eAAe,GAAG,MAAMC,eAAe,CAACX,MAAM,CAAC;IAErD,IAAI,EAACU,eAAe,aAAfA,eAAe,gBAAAX,qBAAA,GAAfW,eAAe,CAAEE,IAAI,cAAAb,qBAAA,eAArBA,qBAAA,CAAuBc,EAAE,GAAE;MAC5B,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;IAC5D;;IAEA;IACAC,QAAQ,CAAC,oBAAoBL,eAAe,CAACE,IAAI,CAACC,EAAE,EAAE,CAAC;EAE3D,CAAC,CAAC,OAAOG,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACZC,OAAO,CAACH,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvCI,QAAQ,CAAC,EAAAH,eAAA,GAAAD,KAAK,CAACK,QAAQ,cAAAJ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBL,IAAI,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBI,OAAO,KAC/BN,KAAK,CAACM,OAAO,IACb,mCAAmC,CAAC;EAC/C,CAAC,SAAS;IACNxB,aAAa,CAAC,KAAK,CAAC;EACxB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}