{"ast":null,"code":"var _jsxFileName = \"C:\\\\SPRING-BOOT\\\\FlightFrontend\\\\booked-frontend\\\\src\\\\components\\\\RazorpayPayment.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types'; // Add this import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RazorpayPayment = ({\n  orderDetails\n}) => {\n  // Safe destructuring with defaults\n  const {\n    orderId = 'order_R7dEbJCummr8hj',\n    amount = order_R7gN7kL62tA4fn,\n    currency = 'INR'\n  } = orderDetails || {};\n  const handlePayment = async () => {\n    if (!orderId) {\n      alert('Order information is missing');\n      return;\n    }\n    try {\n      const script = document.createElement('script');\n      script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n      script.async = true;\n      document.body.appendChild(script);\n      script.onload = () => {\n        const options = {\n          key: \"rzp_test_l5MXTWsTyrUqwN\",\n          amount: amount,\n          currency: currency,\n          order_id: orderId,\n          name: \"Flight Booking\",\n          description: \"Payment for your booking\",\n          handler: async function (response) {\n            try {\n              await axios.post('http://localhost:8080/confirm-booking', {\n                orderId: response.razorpay_order_id,\n                paymentId: response.razorpay_payment_id,\n                signature: response.razorpay_signature\n              });\n              alert('Payment successful! Booking confirmed.');\n            } catch (error) {\n              console.error('Confirmation failed:', error);\n              alert('Payment succeeded but confirmation failed. Please contact support.');\n            }\n          },\n          prefill: {\n            name: \"Passenger Name\",\n            email: \"passenger@example.com\",\n            contact: \"9876543210\"\n          },\n          theme: {\n            color: \"#3399cc\"\n          }\n        };\n        const rzp = new window.Razorpay(options);\n        rzp.on('payment.failed', response => {\n          alert(`Payment failed: ${response.error.description}`);\n        });\n        rzp.open();\n      };\n    } catch (error) {\n      console.error('Payment initialization failed:', error);\n      alert('Failed to initialize payment');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Complete Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Order ID: \", orderId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Amount: \\u20B9\", (amount / 100).toLocaleString('en-IN')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      className: \"pay-button\",\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n// Prop type validation\n_c = RazorpayPayment;\nRazorpayPayment.propTypes = {\n  orderDetails: PropTypes.shape({\n    orderId: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string\n  }).isRequired\n};\nexport default RazorpayPayment;\nvar _c;\n$RefreshReg$(_c, \"RazorpayPayment\");","map":{"version":3,"names":["React","axios","PropTypes","jsxDEV","_jsxDEV","RazorpayPayment","orderDetails","orderId","amount","order_R7gN7kL62tA4fn","currency","handlePayment","alert","script","document","createElement","src","async","body","appendChild","onload","options","key","order_id","name","description","handler","response","post","razorpay_order_id","paymentId","razorpay_payment_id","signature","razorpay_signature","error","console","prefill","email","contact","theme","color","rzp","window","Razorpay","on","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","onClick","_c","propTypes","shape","string","isRequired","number","$RefreshReg$"],"sources":["C:/SPRING-BOOT/FlightFrontend/booked-frontend/src/components/RazorpayPayment.jsx"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types'; // Add this import\r\n\r\nconst RazorpayPayment = ({ orderDetails }) => {\r\n  // Safe destructuring with defaults\r\n  const { \r\n    orderId = 'order_R7dEbJCummr8hj', \r\n    amount = order_R7gN7kL62tA4fn, \r\n    currency = 'INR' \r\n  } = orderDetails || {};\r\n\r\n  const handlePayment = async () => {\r\n    if (!orderId) {\r\n      alert('Order information is missing');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const script = document.createElement('script');\r\n      script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n      script.async = true;\r\n      document.body.appendChild(script);\r\n\r\n      script.onload = () => {\r\n        const options = {\r\n          key: \"rzp_test_l5MXTWsTyrUqwN\",\r\n          amount: amount,\r\n          currency: currency,\r\n          order_id: orderId,\r\n          name: \"Flight Booking\",\r\n          description: \"Payment for your booking\",\r\n          handler: async function(response) {\r\n            try {\r\n              await axios.post('http://localhost:8080/confirm-booking', {\r\n                orderId: response.razorpay_order_id,\r\n                paymentId: response.razorpay_payment_id,\r\n                signature: response.razorpay_signature\r\n              });\r\n              alert('Payment successful! Booking confirmed.');\r\n            } catch (error) {\r\n              console.error('Confirmation failed:', error);\r\n              alert('Payment succeeded but confirmation failed. Please contact support.');\r\n            }\r\n          },\r\n          prefill: {\r\n            name: \"Passenger Name\",\r\n            email: \"passenger@example.com\",\r\n            contact: \"9876543210\"\r\n          },\r\n          theme: {\r\n            color: \"#3399cc\"\r\n          }\r\n        };\r\n\r\n        const rzp = new window.Razorpay(options);\r\n        rzp.on('payment.failed', (response) => {\r\n          alert(`Payment failed: ${response.error.description}`);\r\n        });\r\n        rzp.open();\r\n      };\r\n    } catch (error) {\r\n      console.error('Payment initialization failed:', error);\r\n      alert('Failed to initialize payment');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <h3>Complete Payment</h3>\r\n      <p>Order ID: {orderId}</p>\r\n      <p>Amount: â‚¹{(amount / 100).toLocaleString('en-IN')}</p>\r\n      <button onClick={handlePayment} className=\"pay-button\">\r\n        Pay Now\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Prop type validation\r\nRazorpayPayment.propTypes = {\r\n  orderDetails: PropTypes.shape({\r\n    orderId: PropTypes.string.isRequired,\r\n    amount: PropTypes.number.isRequired,\r\n    currency: PropTypes.string\r\n  }).isRequired\r\n};\r\n\r\nexport default RazorpayPayment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}