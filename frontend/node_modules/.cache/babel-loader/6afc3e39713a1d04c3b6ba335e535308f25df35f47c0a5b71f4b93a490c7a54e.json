{"ast":null,"code":"var _jsxFileName = \"C:\\\\SPRING-BOOT\\\\FlightFrontend\\\\booked-frontend\\\\src\\\\security\\\\MainContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useCallback } from \"react\";\nimport { ExecuteJwtAuthAPI, RegisterUser } from \"../api/CallingApi\";\nimport { urlAPI } from \"../api/ApiClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  const [authState, setAuthState] = useState({\n    isAuthenticated: false,\n    email: null,\n    token: null,\n    roles: [],\n    userDetails: null // Add for additional user info\n  });\n\n  // Memoized login function\n  const login = useCallback(async (email, password) => {\n    try {\n      const response = await ExecuteJwtAuthAPI(email, password);\n      if (response.status === 200) {\n        const JWToken = `Bearer ${response.data.token}`;\n        const decodedToken = parseJwt(response.data.token);\n\n        // Set axios interceptor\n        urlAPI.interceptors.request.use(config => {\n          config.headers.Authorization = JWToken;\n          return config;\n        });\n        setAuthState({\n          isAuthenticated: true,\n          email,\n          token: JWToken,\n          roles: decodedToken.roles || [],\n          userDetails: decodedToken.userDetails || null\n        });\n        return true;\n      }\n      logout();\n      return false;\n    } catch (error) {\n      logout();\n      console.error(\"Login error:\", error);\n      return false;\n    }\n  }, []);\n  const register = useCallback(async (email, password) => {\n    try {\n      const response = await RegisterUser({\n        email,\n        password\n      });\n      if (response.status === 201 || response.status === 200) {\n        return await login(email, password);\n      }\n      return false;\n    } catch (error) {\n      var _error$response;\n      console.error('Registration error:', error);\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        message: 'Registration failed'\n      };\n    }\n  }, [login]);\n  const logout = useCallback(() => {\n    // Clear axios interceptor\n    urlAPI.interceptors.request.use(config => {\n      delete config.headers.Authorization;\n      return config;\n    });\n    setAuthState({\n      isAuthenticated: false,\n      email: null,\n      token: null,\n      roles: [],\n      userDetails: null\n    });\n  }, []);\n\n  // Helper function to parse JWT\n  const parseJwt = token => {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      return JSON.parse(atob(base64));\n    } catch (e) {\n      console.error(\"JWT parsing error:\", e);\n      return {};\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authenticated: authState.isAuthenticated,\n      email: authState.email,\n      token: authState.token,\n      roles: authState.roles,\n      user: authState.userDetails || {\n        name: authState.email\n      },\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"6oYOPG8F6Dl41+7HYiwdxJymnuA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useCallback","ExecuteJwtAuthAPI","RegisterUser","urlAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","authState","setAuthState","isAuthenticated","email","token","roles","userDetails","login","password","response","status","JWToken","data","decodedToken","parseJwt","interceptors","request","use","config","headers","Authorization","logout","error","console","register","_error$response","message","base64Url","split","base64","replace","JSON","parse","atob","e","Provider","value","authenticated","user","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/SPRING-BOOT/FlightFrontend/booked-frontend/src/security/MainContext.js"],"sourcesContent":["import { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { ExecuteJwtAuthAPI, RegisterUser } from \"../api/CallingApi\";\r\nimport { urlAPI } from \"../api/ApiClient\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const [authState, setAuthState] = useState({\r\n        isAuthenticated: false,\r\n        email: null,\r\n        token: null,\r\n        roles: [],\r\n        userDetails: null // Add for additional user info\r\n    });\r\n\r\n    // Memoized login function\r\n    const login = useCallback(async (email, password) => {\r\n        try {\r\n            const response = await ExecuteJwtAuthAPI(email, password);\r\n            \r\n            if (response.status === 200) {\r\n                const JWToken = `Bearer ${response.data.token}`;\r\n                const decodedToken = parseJwt(response.data.token);\r\n                \r\n                // Set axios interceptor\r\n                urlAPI.interceptors.request.use((config) => {\r\n                    config.headers.Authorization = JWToken;\r\n                    return config;\r\n                });\r\n\r\n                setAuthState({\r\n                    isAuthenticated: true,\r\n                    email,\r\n                    token: JWToken,\r\n                    roles: decodedToken.roles || [],\r\n                    userDetails: decodedToken.userDetails || null\r\n                });\r\n\r\n                return true;\r\n            }\r\n            logout();\r\n            return false;\r\n        } catch(error) {\r\n            logout();\r\n            console.error(\"Login error:\", error);\r\n            return false;\r\n        }\r\n    }, []);\r\n\r\n    const register = useCallback(async (email, password) => {\r\n        try {\r\n            const response = await RegisterUser({ email, password });\r\n            \r\n            if (response.status === 201 || response.status === 200) {\r\n                return await login(email, password);\r\n            }\r\n            return false;\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            throw error.response?.data || { message: 'Registration failed' };\r\n        }\r\n    }, [login]);\r\n\r\n    const logout = useCallback(() => {\r\n        // Clear axios interceptor\r\n        urlAPI.interceptors.request.use((config) => {\r\n            delete config.headers.Authorization;\r\n            return config;\r\n        });\r\n\r\n        setAuthState({\r\n            isAuthenticated: false,\r\n            email: null,\r\n            token: null,\r\n            roles: [],\r\n            userDetails: null\r\n        });\r\n    }, []);\r\n\r\n    // Helper function to parse JWT\r\n    const parseJwt = (token) => {\r\n        try {\r\n            const base64Url = token.split('.')[1];\r\n            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n            return JSON.parse(atob(base64));\r\n        } catch (e) {\r\n            console.error(\"JWT parsing error:\", e);\r\n            return {};\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            authenticated: authState.isAuthenticated,\r\n            email: authState.email,\r\n            token: authState.token,\r\n            roles: authState.roles,\r\n            user: authState.userDetails || { name: authState.email },\r\n            login,\r\n            logout,\r\n            register\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}