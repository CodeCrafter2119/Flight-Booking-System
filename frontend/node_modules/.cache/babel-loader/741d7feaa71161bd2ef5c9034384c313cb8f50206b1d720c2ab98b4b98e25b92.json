{"ast":null,"code":"//  import { ErrorMessage, Field, Formik } from \"formik\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// // import { useAuth } from \"./security/AuthContext\";\n// import { useEffect, useState } from \"react\";\n// import { AddNewFlightAPI, retrieveAFlightById, UpdatedFlightAPI } from \"../api/CallingApi\";\n\n// export default function AddNewFlight() {\n//     // const authContext = useAuth();\n//     const navigate = useNavigate();\n//     const { id } = useParams();\n\n// const [initialValues, setInitialValues] = useState({\n//         departureFrom: \"\",\n//         arrivalTo: \"\",\n//         departure: \"\",\n//         returnDate: \"\",\n//         seatsAvailable: \"\"\n//     });\n\n//     useEffect(() => {\n//         const fetchFlightById = async () => {\n//             if (id && id !== \"-1\") {\n//                 try {\n//                     const response = await retrieveAFlightById(id);\n//                     setInitialValues({\n//                         departureFrom: response.data.departureFrom || \"\",\n//                         arrivalTo: response.data.arrivalTo || \"\",\n//                         departure: response.data.departure || \"\",\n//                         returnDate: response.data.returnDate || \"\",\n//                         seatsAvailable: response.data.seatsAvailable || \"\"\n//                     });\n//                 } catch (error) {\n//                     console.log(error);\n//                 }\n//             }\n//         };\n//         fetchFlightById();\n//     }, [id])\n\n//     function onSubmit(values) {\n//         console.log(values);\n\n//         const flight = {\n//             // id: id,\n//             departureFrom: values.departureFrom,  // Use the edited username from Formik\n//             arrivalTo: values.arrivalTo,\n//             departure: values.departure,\n//             returnDate: values.returnDate,\n//             seatsAvailable: values.seatsAvailable\n//         };\n\n//         if(id==-1){\n\n//             AddNewFlightAPI(flight)  // Pass the edited username\n//             .then(response => {\n//                 console.log(response);\n//                 navigate(\"/successpage\");\n//             })\n//             .catch(error => console.log(error));\n//         }else{\n\n//              UpdatedFlightAPI(id,flight)\n//                        .then(response =>{\n//                            console.log(response.data.departureFrom)\n//                            navigate(\"/successpage\");\n//                         //    Setstudentname(response.data.username)\n\n//                         })\n//                         .catch( error =>console.log(error))\n//         }\n//     }\n\n//     function validate(values) {\n//         let errors = {};\n\n//         if (!values.departureFrom) {\n//             errors.departureFrom = \"departureFrom is required\";\n//         }\n//         if (!values.arrivalTo) {\n//             errors.arrivalTo = \"Enter arrivalTo\";\n//         }\n//         if (!values.departure) {\n//             errors.departure = \"Enter a valid departure\";\n//         }\n\n//         return errors;\n//     }\n\n//     return (\n//         <div>\n//             <div>\n//                 <Formik\n//                     initialValues ={initialValues}\n//                     enableReinitialize={true}\n//                     onSubmit={onSubmit}\n//                     validate={validate}\n//                     validateOnBlur={false}\n//                     validateOnChange={false}\n//                 >\n//                     {(props) => (\n//                         <form onSubmit={props.handleSubmit}>\n//                             {/* Username Field (Now Editable) */}\n//                             <ErrorMessage\n//                                 name=\"departureFrom\"\n//                                 component=\"div\"\n//                                 className=\"alert alert-warning\"\n//                             />\n//                             <fieldset className=\"form-group\">\n//                                 <label>departureFrom</label>\n//                                 <Field \n//                                     type=\"text\" \n//                                     className=\"form-control\" \n//                                     name=\"departureFrom\"\n//                                 />\n//                             </fieldset>\n\n//                             {/* Other Fields */}\n//                             <ErrorMessage\n//                                 name=\"arrivalTo\"\n//                                 component=\"div\"\n//                                 className=\"alert alert-warning\"\n//                             />\n//                             <ErrorMessage\n//                                 name=\"departure\"\n//                                 component=\"div\"\n//                                 className=\"alert alert-warning\"\n//                             />\n//                             <fieldset className=\"form-group\">\n//                                 <label>arrivalTo</label>\n//                                 <Field \n//                                     type=\"text\" \n//                                     className=\"form-control\" \n//                                     name=\"arrivalTo\" \n//                                 />\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>departure</label>\n//                                 <Field \n//                                     type=\"date\" \n//                                     className=\"form-control\" \n//                                     name=\"departure\" \n//                                 />\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>returnDate</label>\n//                                 <Field \n//                                     type=\"date\" \n//                                     className=\"form-control\" \n//                                     name=\"returnDate\" \n//                                 />\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>seatsAvailable</label>\n//                                 <Field \n//                                     type=\"text\" \n//                                     className=\"form-control\" \n//                                     name=\"seatsAvailable\" \n//                                 />\n//                             </fieldset>\n//                             <button className=\"btn btn-success\" type=\"submit\">\n//                                 Save\n//                             </button>\n//                         </form>\n//                     )}\n//                 </Formik>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/SPRING-BOOT/FlightFrontend/booked-frontend/src/components/AddNewFlight.jsx"],"sourcesContent":["//  import { ErrorMessage, Field, Formik } from \"formik\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n// // import { useAuth } from \"./security/AuthContext\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { AddNewFlightAPI, retrieveAFlightById, UpdatedFlightAPI } from \"../api/CallingApi\";\r\n\r\n// export default function AddNewFlight() {\r\n//     // const authContext = useAuth();\r\n//     const navigate = useNavigate();\r\n//     const { id } = useParams();\r\n\r\n    \r\n\r\n// const [initialValues, setInitialValues] = useState({\r\n//         departureFrom: \"\",\r\n//         arrivalTo: \"\",\r\n//         departure: \"\",\r\n//         returnDate: \"\",\r\n//         seatsAvailable: \"\"\r\n//     });\r\n\r\n//     useEffect(() => {\r\n//         const fetchFlightById = async () => {\r\n//             if (id && id !== \"-1\") {\r\n//                 try {\r\n//                     const response = await retrieveAFlightById(id);\r\n//                     setInitialValues({\r\n//                         departureFrom: response.data.departureFrom || \"\",\r\n//                         arrivalTo: response.data.arrivalTo || \"\",\r\n//                         departure: response.data.departure || \"\",\r\n//                         returnDate: response.data.returnDate || \"\",\r\n//                         seatsAvailable: response.data.seatsAvailable || \"\"\r\n//                     });\r\n//                 } catch (error) {\r\n//                     console.log(error);\r\n//                 }\r\n//             }\r\n//         };\r\n//         fetchFlightById();\r\n//     }, [id])\r\n  \r\n\r\n//     function onSubmit(values) {\r\n//         console.log(values);\r\n\r\n//         const flight = {\r\n//             // id: id,\r\n//             departureFrom: values.departureFrom,  // Use the edited username from Formik\r\n//             arrivalTo: values.arrivalTo,\r\n//             departure: values.departure,\r\n//             returnDate: values.returnDate,\r\n//             seatsAvailable: values.seatsAvailable\r\n//         };\r\n        \r\n//         if(id==-1){\r\n\r\n//             AddNewFlightAPI(flight)  // Pass the edited username\r\n//             .then(response => {\r\n//                 console.log(response);\r\n//                 navigate(\"/successpage\");\r\n//             })\r\n//             .catch(error => console.log(error));\r\n//         }else{\r\n\r\n//              UpdatedFlightAPI(id,flight)\r\n//                        .then(response =>{\r\n//                            console.log(response.data.departureFrom)\r\n//                            navigate(\"/successpage\");\r\n//                         //    Setstudentname(response.data.username)\r\n\r\n//                         })\r\n//                         .catch( error =>console.log(error))\r\n//         }\r\n//     }\r\n \r\n//     function validate(values) {\r\n//         let errors = {};\r\n\r\n//         if (!values.departureFrom) {\r\n//             errors.departureFrom = \"departureFrom is required\";\r\n//         }\r\n//         if (!values.arrivalTo) {\r\n//             errors.arrivalTo = \"Enter arrivalTo\";\r\n//         }\r\n//         if (!values.departure) {\r\n//             errors.departure = \"Enter a valid departure\";\r\n//         }\r\n        \r\n//         return errors;\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <div>\r\n//                 <Formik\r\n//                     initialValues ={initialValues}\r\n//                     enableReinitialize={true}\r\n//                     onSubmit={onSubmit}\r\n//                     validate={validate}\r\n//                     validateOnBlur={false}\r\n//                     validateOnChange={false}\r\n//                 >\r\n//                     {(props) => (\r\n//                         <form onSubmit={props.handleSubmit}>\r\n//                             {/* Username Field (Now Editable) */}\r\n//                             <ErrorMessage\r\n//                                 name=\"departureFrom\"\r\n//                                 component=\"div\"\r\n//                                 className=\"alert alert-warning\"\r\n//                             />\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>departureFrom</label>\r\n//                                 <Field \r\n//                                     type=\"text\" \r\n//                                     className=\"form-control\" \r\n//                                     name=\"departureFrom\"\r\n//                                 />\r\n//                             </fieldset>\r\n\r\n//                             {/* Other Fields */}\r\n//                             <ErrorMessage\r\n//                                 name=\"arrivalTo\"\r\n//                                 component=\"div\"\r\n//                                 className=\"alert alert-warning\"\r\n//                             />\r\n//                             <ErrorMessage\r\n//                                 name=\"departure\"\r\n//                                 component=\"div\"\r\n//                                 className=\"alert alert-warning\"\r\n//                             />\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>arrivalTo</label>\r\n//                                 <Field \r\n//                                     type=\"text\" \r\n//                                     className=\"form-control\" \r\n//                                     name=\"arrivalTo\" \r\n//                                 />\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>departure</label>\r\n//                                 <Field \r\n//                                     type=\"date\" \r\n//                                     className=\"form-control\" \r\n//                                     name=\"departure\" \r\n//                                 />\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>returnDate</label>\r\n//                                 <Field \r\n//                                     type=\"date\" \r\n//                                     className=\"form-control\" \r\n//                                     name=\"returnDate\" \r\n//                                 />\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>seatsAvailable</label>\r\n//                                 <Field \r\n//                                     type=\"text\" \r\n//                                     className=\"form-control\" \r\n//                                     name=\"seatsAvailable\" \r\n//                                 />\r\n//                             </fieldset>\r\n//                             <button className=\"btn btn-success\" type=\"submit\">\r\n//                                 Save\r\n//                             </button>\r\n//                         </form>\r\n//                     )}\r\n//                 </Formik>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}